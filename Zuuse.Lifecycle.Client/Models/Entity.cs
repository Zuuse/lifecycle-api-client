// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Zuuse.Lifecycle.Client.Models
{
    /// <summary> The Entity. </summary>
    public partial class Entity
    {
        /// <summary> Initializes a new instance of Entity. </summary>
        internal Entity()
        {
            Values = new ChangeTrackingList<Value>();
            RelatedEntities = new ChangeTrackingList<Relation>();
        }

        /// <summary> Initializes a new instance of Entity. </summary>
        /// <param name="values"> . </param>
        /// <param name="createdDate"> . </param>
        /// <param name="createdBy"> . </param>
        /// <param name="isActive"> . </param>
        /// <param name="id"> . </param>
        /// <param name="versionDate"> . </param>
        /// <param name="versionBy"> . </param>
        /// <param name="locked"> . </param>
        /// <param name="templateReference"> . </param>
        /// <param name="owner"> . </param>
        /// <param name="relatedEntities"> . </param>
        internal Entity(IReadOnlyList<Value> values, DateTimeOffset? createdDate, string createdBy, bool? isActive, string id, DateTimeOffset? versionDate, string versionBy, bool? locked, string templateReference, AssetReference owner, IReadOnlyList<Relation> relatedEntities)
        {
            Values = values;
            CreatedDate = createdDate;
            CreatedBy = createdBy;
            IsActive = isActive;
            Id = id;
            VersionDate = versionDate;
            VersionBy = versionBy;
            Locked = locked;
            TemplateReference = templateReference;
            Owner = owner;
            RelatedEntities = relatedEntities;
        }

        public IReadOnlyList<Value> Values { get; }
        public DateTimeOffset? CreatedDate { get; }
        public string CreatedBy { get; }
        public bool? IsActive { get; }
        public string Id { get; }
        public DateTimeOffset? VersionDate { get; }
        public string VersionBy { get; }
        public bool? Locked { get; }
        public string TemplateReference { get; }
        public AssetReference Owner { get; }
        public IReadOnlyList<Relation> RelatedEntities { get; }
    }
}
