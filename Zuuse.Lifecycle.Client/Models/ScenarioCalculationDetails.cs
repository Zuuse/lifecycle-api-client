// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Zuuse.Lifecycle.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ScenarioCalculationDetails
    {
        /// <summary>
        /// Initializes a new instance of the ScenarioCalculationDetails class.
        /// </summary>
        public ScenarioCalculationDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScenarioCalculationDetails class.
        /// </summary>
        public ScenarioCalculationDetails(BaselineScenario baselineScenario = default(BaselineScenario), System.Guid? locationFilter = default(System.Guid?), System.Guid? functionFilter = default(System.Guid?), IList<string> locationSelection = default(IList<string>), IList<string> functionSelection = default(IList<string>))
        {
            BaselineScenario = baselineScenario;
            LocationFilter = locationFilter;
            FunctionFilter = functionFilter;
            LocationSelection = locationSelection;
            FunctionSelection = functionSelection;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BaselineScenario")]
        public BaselineScenario BaselineScenario { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationFilter")]
        public System.Guid? LocationFilter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionFilter")]
        public System.Guid? FunctionFilter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationSelection")]
        public IList<string> LocationSelection { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionSelection")]
        public IList<string> FunctionSelection { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (BaselineScenario != null)
            {
                BaselineScenario.Validate();
            }
        }
    }
}
