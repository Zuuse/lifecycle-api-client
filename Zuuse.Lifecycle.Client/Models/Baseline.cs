// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Zuuse.Lifecycle.Client.Models
{
    /// <summary> The Baseline. </summary>
    public partial class Baseline
    {
        /// <summary> Initializes a new instance of Baseline. </summary>
        /// <param name="status"> . </param>
        /// <param name="displayName"> . </param>
        /// <param name="discountRate"> . </param>
        /// <param name="forecastHorizon"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="displayName"/> is null. </exception>
        public Baseline(BaselineStatus status, string displayName, double discountRate, int forecastHorizon)
        {
            if (displayName == null)
            {
                throw new ArgumentNullException(nameof(displayName));
            }

            Status = status;
            DisplayName = displayName;
            DiscountRate = discountRate;
            ForecastHorizon = forecastHorizon;
        }

        /// <summary> Initializes a new instance of Baseline. </summary>
        /// <param name="status"> . </param>
        /// <param name="errorMessage"> . </param>
        /// <param name="displayName"> . </param>
        /// <param name="discountRate"> . </param>
        /// <param name="runDate"> . </param>
        /// <param name="forecastHorizon"> . </param>
        /// <param name="startYear"> . </param>
        /// <param name="id"> . </param>
        /// <param name="versionDate"> . </param>
        /// <param name="versionBy"> . </param>
        /// <param name="createdDate"> . </param>
        /// <param name="createdBy"> . </param>
        /// <param name="isActive"> . </param>
        internal Baseline(BaselineStatus status, string errorMessage, string displayName, double discountRate, DateTimeOffset? runDate, int forecastHorizon, int? startYear, string id, DateTimeOffset? versionDate, string versionBy, DateTimeOffset? createdDate, string createdBy, bool? isActive)
        {
            Status = status;
            ErrorMessage = errorMessage;
            DisplayName = displayName;
            DiscountRate = discountRate;
            RunDate = runDate;
            ForecastHorizon = forecastHorizon;
            StartYear = startYear;
            Id = id;
            VersionDate = versionDate;
            VersionBy = versionBy;
            CreatedDate = createdDate;
            CreatedBy = createdBy;
            IsActive = isActive;
        }

        public BaselineStatus Status { get; set; }
        public string ErrorMessage { get; set; }
        public string DisplayName { get; set; }
        public double DiscountRate { get; set; }
        public DateTimeOffset? RunDate { get; set; }
        public int ForecastHorizon { get; set; }
        public int? StartYear { get; }
        public string Id { get; set; }
        public DateTimeOffset? VersionDate { get; set; }
        public string VersionBy { get; set; }
        public DateTimeOffset? CreatedDate { get; set; }
        public string CreatedBy { get; set; }
        public bool? IsActive { get; set; }
    }
}
