// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Zuuse.Lifecycle.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class BaselineScenarioSummary
    {
        /// <summary>
        /// Initializes a new instance of the BaselineScenarioSummary class.
        /// </summary>
        public BaselineScenarioSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BaselineScenarioSummary class.
        /// </summary>
        public BaselineScenarioSummary(int? totalAssets = default(int?), int? filteredAssets = default(int?), int? selectedAssets = default(int?), int? totalAssetsAtRisk = default(int?), BaselineScenario baselineScenario = default(BaselineScenario), TaxonomyPosition location = default(TaxonomyPosition), TaxonomyPosition function = default(TaxonomyPosition), IList<TaxonomyScenarioSummary> drillDownLocations = default(IList<TaxonomyScenarioSummary>), IList<TaxonomyScenarioSummary> drillDownFunctions = default(IList<TaxonomyScenarioSummary>), int? startYear = default(int?))
        {
            TotalAssets = totalAssets;
            FilteredAssets = filteredAssets;
            SelectedAssets = selectedAssets;
            TotalAssetsAtRisk = totalAssetsAtRisk;
            BaselineScenario = baselineScenario;
            Location = location;
            Function = function;
            DrillDownLocations = drillDownLocations;
            DrillDownFunctions = drillDownFunctions;
            StartYear = startYear;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalAssets")]
        public int? TotalAssets { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FilteredAssets")]
        public int? FilteredAssets { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SelectedAssets")]
        public int? SelectedAssets { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalAssetsAtRisk")]
        public int? TotalAssetsAtRisk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BaselineScenario")]
        public BaselineScenario BaselineScenario { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Location")]
        public TaxonomyPosition Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Function")]
        public TaxonomyPosition Function { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DrillDownLocations")]
        public IList<TaxonomyScenarioSummary> DrillDownLocations { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DrillDownFunctions")]
        public IList<TaxonomyScenarioSummary> DrillDownFunctions { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StartYear")]
        public int? StartYear { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (BaselineScenario != null)
            {
                BaselineScenario.Validate();
            }
        }
    }
}
