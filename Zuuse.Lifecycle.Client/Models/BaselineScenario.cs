// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Zuuse.Lifecycle.Client.Models
{
    /// <summary> The BaselineScenario. </summary>
    public partial class BaselineScenario
    {
        /// <summary> Initializes a new instance of BaselineScenario. </summary>
        /// <param name="displayName"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="displayName"/> is null. </exception>
        public BaselineScenario(string displayName)
        {
            if (displayName == null)
            {
                throw new ArgumentNullException(nameof(displayName));
            }

            DisplayName = displayName;
            Deferrals = new ChangeTrackingList<Deferral>();
            Budget = new ChangeTrackingList<double>();
        }

        /// <summary> Initializes a new instance of BaselineScenario. </summary>
        /// <param name="displayName"> . </param>
        /// <param name="baselineId"> . </param>
        /// <param name="deferrals"> . </param>
        /// <param name="budget"> . </param>
        /// <param name="isPublished"> . </param>
        /// <param name="id"> . </param>
        /// <param name="versionDate"> . </param>
        /// <param name="versionBy"> . </param>
        /// <param name="createdDate"> . </param>
        /// <param name="createdBy"> . </param>
        /// <param name="isActive"> . </param>
        internal BaselineScenario(string displayName, string baselineId, IReadOnlyList<Deferral> deferrals, IReadOnlyList<double> budget, bool? isPublished, string id, DateTimeOffset? versionDate, string versionBy, DateTimeOffset? createdDate, string createdBy, bool? isActive)
        {
            DisplayName = displayName;
            BaselineId = baselineId;
            Deferrals = deferrals;
            Budget = budget;
            IsPublished = isPublished;
            Id = id;
            VersionDate = versionDate;
            VersionBy = versionBy;
            CreatedDate = createdDate;
            CreatedBy = createdBy;
            IsActive = isActive;
        }

        public string DisplayName { get; set; }
        public string BaselineId { get; set; }
        public IReadOnlyList<Deferral> Deferrals { get; }
        public IReadOnlyList<double> Budget { get; }
        public bool? IsPublished { get; set; }
        public string Id { get; set; }
        public DateTimeOffset? VersionDate { get; set; }
        public string VersionBy { get; set; }
        public DateTimeOffset? CreatedDate { get; set; }
        public string CreatedBy { get; set; }
        public bool? IsActive { get; set; }
    }
}
