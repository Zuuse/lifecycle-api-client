// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Zuuse.Lifecycle.Client
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Scenario operations.
    /// </summary>
    public partial interface IScenario
    {
        /// <summary>
        /// Retrieve a single baseline scenario by Guid
        /// </summary>
        /// <param name='client'>
        /// The name of the client account.
        /// </param>
        /// <param name='baselineId'>
        /// The Id of the Baseline that the Scenario references
        /// </param>
        /// <param name='scenarioId'>
        /// The Id of the Scenario
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<BaselineScenario>> GetScenarioWithHttpMessagesAsync(string client, string baselineId, string scenarioId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Upserts a single baselineScenario
        /// </summary>
        /// <param name='client'>
        /// The name of the client account.
        /// </param>
        /// <param name='baselineId'>
        /// The Id of the Baseline that the Scenario references
        /// </param>
        /// <param name='scenarioId'>
        /// The Id of the Scenario
        /// </param>
        /// <param name='scenario'>
        /// The baselineScenario to insert/update. contained in the httppost
        /// body
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<string>> UpsertScenarioWithHttpMessagesAsync(string client, string baselineId, string scenarioId, BaselineScenario scenario, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieve a collection of scenarios by a baselines Guid
        /// </summary>
        /// <param name='client'>
        /// The name of the client account.
        /// </param>
        /// <param name='baselineId'>
        /// The baseline Guid.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<BaselineScenarioDetails>>> GetScenariosWithHttpMessagesAsync(string client, string baselineId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retirves a Scenario Summary
        /// </summary>
        /// <param name='client'>
        /// The name of the client account.
        /// </param>
        /// <param name='baselineId'>
        /// The Id of the Baseline that the Scenario references
        /// </param>
        /// <param name='scenarioId'>
        /// The Id of the Scenario
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<BaselineScenarioSummary>> ScenarioSummaryWithHttpMessagesAsync(string client, string baselineId, string scenarioId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Calculates a Scenario Summary Calculation
        /// </summary>
        /// <param name='client'>
        /// The name of the client account.
        /// </param>
        /// <param name='baselineId'>
        /// The Id of the Baseline that the Scenario references
        /// </param>
        /// <param name='scenarioId'>
        /// The Id of the Scenario
        /// </param>
        /// <param name='scenarioDetails'>
        /// The baselineScenarioDetails to use in the calculations. contained
        /// in the httppost body
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<BaselineScenarioSummary>> ScenarioSummaryCalculateWithHttpMessagesAsync(string client, string baselineId, string scenarioId, ScenarioCalculationDetails scenarioDetails, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
